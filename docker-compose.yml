version: "3.3"

services:
  traefik:
    image: traefik:1.4
    ports:
      - 80:80
      - 8080:8080
    networks:
      - traefik-net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    configs:
      - source: traefik-config
        target: /etc/traefik/traefik.toml
    deploy:
      placement:
        constraints: [node.role == manager]

  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "3000:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - traefik-net

  utm-service:
    container_name: utm-service
    image: n0bis/utmservice

  manager:
    container_name: manager
    image: n0bis/dronemanager
    environment:
      - ConnectionStrings__AppDbContext=Host=database;Database=healthydrone;Username=root;Password=secret;
    networks:
      - traefik-net
      - database-net
    deploy:
      placement:
        constraints:
          - node.role == worker
      labels:
        - "traefik.port=80"
        - "traefik.backend=manager"
        - "traefik.frontend.rule=Path:/manager"
    depends_on:
      - database

  database:
    image: postgres:latest
    restart: always
    volumes:
      - db_volume:/var/lib/postgresql/data
      - ./database/seed.sql :/docker-entrypoint-initdb.d/seed.sql
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: healthydrone
    networks:
      - database-net

volumes:
  db_volume:

networks:
  traefik-net:
    driver: overlay
  database-net:

configs:
  traefik-config:
    file: config.toml